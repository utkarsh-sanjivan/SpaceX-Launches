{"version":3,"sources":["utils/axios.js","api/api.launch.js","store/LaunchList/sagas.js","store/LaunchList/constants.js","store/sagas.js","store/LaunchList/reducers.js","store/reducers.js","store/LaunchList/actions.js","component/SpaceXCard/index.js","component/LaunchList/index.js","component/SpaceXButton/index.js","component/Filter/index.js","component/Loader/index.js","container/LaunchListPage/index.js","index.js","store/index.js"],"names":["instance","axios","create","baseURL","headers","getUrl","params","Object","keys","reduce","acc","curKey","getLaunchListAPI","a","url","get","response","status","data","getLaunchListSaga","userSaga","action","call","payload","responseBody","put","type","request","message","all","takeLatest","root","fork","launchList","INITIAL_STATE","launchListLoading","launchListErrored","reducer","state","history","combineReducers","launchListReducer","getLaunchList","SpaceXCard","props","className","launchDetails","links","mission_patch","class","alt","src","description","image","imageStyle","width","mission_name","flight_number","style","display","launch_year","launch_success","cursor","LaunchList","launches","map","SpaceXButton","isSelected","Filter","gridTemplateRows","Array","fill","__","index","key","filterObj","toString","onClick","filterClicked","text","checkText","filterType","value","land_success","Loader","LaunchListPage","setState","prevState","launchListActions","this","color","fontWeight","prevProps","React","Component","connect","store","dispatch","bindActionCreators","LaunchListActions","createHistory","initialState","sagaMiddleware","createSagaMiddleware","routeMiddleware","routerMiddleware","createStore","createRootReducers","compose","applyMiddleware","run","sagas","buildStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37f57c3e.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n\tbaseURL: 'https://api.spacexdata.com/v3/',\n\theaders: {\n\t\t'Content-Type': 'application/json',\n\t},\n});\n\nexport { instance as default };","import axios from './../utils/axios';\n\nfunction getUrl(params) {\n    return Object.keys(params).reduce((acc, curKey) => {\n        if (params[curKey] !== '') return `${acc}&${curKey}=${params[curKey]}`;\n        return acc;\n    }, 'launches?limit=100');\n}\n\nexport async function getLaunchListAPI(params) {\n    const url = getUrl(params);\n    const response = await axios.get(url, {});\n    const isSuccess = response.status >=200 && response.status < 300;\n    if (isSuccess) {\n    return response.data;\n    }\n    throw response.status;\n}\n","import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { \n    GET_LAUNCH_LIST_REQUESTED,\n    GET_LAUNCH_LIST_SUCCESS,\n    GET_LAUNCH_LIST_ERRORED,\n} from './constants';\nimport {\n    getLaunchListAPI,\n} from '../../api/api.launch';\n\nfunction* getLaunchListSaga(action) {\n    try {\n        const responseBody = yield call(getLaunchListAPI, action.payload);\n        yield put({\n            type: GET_LAUNCH_LIST_SUCCESS,\n            payload: responseBody,\n        });\n    } catch (err) {\n        const payload = {\n            status: err.request.status,\n            message: err.message,\n        }\n        yield put({\n            type: GET_LAUNCH_LIST_ERRORED,\n            payload,\n        });\n    };\n};\n\nexport default function* userSaga() {\n    yield all([\n        takeLatest(GET_LAUNCH_LIST_REQUESTED, getLaunchListSaga),\n    ]);\n};","export const GET_LAUNCH_LIST_REQUESTED = 'GET_LAUNCH_LIST_REQUESTED';\nexport const GET_LAUNCH_LIST_SUCCESS = 'GET_LAUNCH_LIST_SUCCESS';\nexport const GET_LAUNCH_LIST_ERRORED = 'GET_LAUNCH_LIST_ERRORED';","import { fork } from 'redux-saga/effects'\nimport launchList from './LaunchList/sagas';\n\nexport default function* root() {\n  yield fork(launchList);\n}","import { \n    GET_LAUNCH_LIST_REQUESTED,\n    GET_LAUNCH_LIST_SUCCESS,\n    GET_LAUNCH_LIST_ERRORED,\n} from './constants';\n\nconst INITIAL_STATE = {\n    launchListLoading: false,\n    launchListErrored: false,\n    launchList: [],\n};\n\nexport function reducer ( state = INITIAL_STATE, action) {\n    switch ( action.type ) {\n        case GET_LAUNCH_LIST_REQUESTED:\n            return {\n                ...state,\n                launchListLoading: true,\n                launchListErrored: false,\n                launchList: [],\n            };\n\n        case GET_LAUNCH_LIST_SUCCESS:\n            return {\n                ...state,\n                launchListLoading: false,\n                launchListErrored: false,\n                launchList: action.payload,\n            };\n\n        case GET_LAUNCH_LIST_ERRORED:\n            return {\n                ...state,\n                launchListLoading: false,\n                launchListErrored: true,\n                launchList: [],\n            };\n\n        default: {\n            return {\n                ...state\n            }\n        }\n\n    };\n};","import { reducer as launchListReducer } from \"./LaunchList/reducers\";\nimport { combineReducers } from 'redux';\n\nexport default (history) => combineReducers({\n  launchList: launchListReducer,\n});\n","import { \n    GET_LAUNCH_LIST_REQUESTED,\n} from './constants';\n\nexport function getLaunchList(payload) {\n    return {\n        type: GET_LAUNCH_LIST_REQUESTED,\n        payload,\n    }\n}\n","import React from 'react';\nimport { Empty } from 'antd'\nimport './style.css';\n\nconst SpaceXCard = props => (\n  <div className=\"spacex-card\">\n    {props.launchDetails.links.mission_patch?\n      <img class=\"spacex-card-image\" alt=\"Unavailable\" src={props.launchDetails.links.mission_patch} />\n      : <Empty \n        className=\"spacex-card-empty-image\"\n        description={'Image Unavailable'}\n        image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\n        imageStyle={{ width: '100%' }}\n      />\n    }\n    <div className=\"spacex-card-content\">\n      <div className=\"spacex-card-name\">{props.launchDetails.mission_name} #{props.launchDetails.flight_number}</div>\n      <div className=\"spacex-card-mission-text\">Mission Ids:</div>\n      <div className=\"spacex-card-mission-list\">&#123; list Mission Ids &#125;</div>\n      <div style={{ display: 'flex' }}>\n        <p className=\"spacex-card-title\">Launch Year:</p>\n        <p className=\"spacex-card-sub-title\">{props.launchDetails.launch_year}</p></div>\n      <div style={{ display: 'flex' }}>\n        <p className=\"spacex-card-title\">Successful Launch:</p>\n        <p className=\"spacex-card-sub-title\">{props.launchDetails.launch_success? 'true': 'false'}</p></div>\n      <div style={{ display: 'flex' }}>\n        <p className=\"spacex-card-title\">Successful Landing:</p>\n        <p style={{ cursor: 'pointer' }} className=\"spacex-card-sub-title\">&#123; launch landing &#125;</p>\n      </div>\n    </div>\n  </div>\n)\n\nexport default SpaceXCard;","import React from 'react';\nimport SpaceXCard from './../SpaceXCard/index.js' ;\nimport './style.css';\n\nconst LaunchList = props => (\n    <div className=\"launch-list-conatainer\">\n        {props.launches.map(launchDetails => <SpaceXCard launchDetails={launchDetails}/>)}\n    </div>\n)\n\nexport default LaunchList;","import React from 'react';\nimport { Button } from 'antd';\nimport './style.css';\n\nconst SpaceXButton = props => (\n    <Button \n        {...props}\n        className={props.isSelected? 'selected-color': 'unselected-color'}\n    />\n)\n\nexport default SpaceXButton;","import React from 'react';\nimport SpaceXButton from './../SpaceXButton/index';\nimport './style.css';\n\nconst Filter = props => (\n    <div className=\"filters-conatainer\">\n        <div className=\"filters-title\">\n            Filters\n        </div>\n        <div className=\"filter-type-text\">Launch Year</div>\n        <div style={{ gridTemplateRows: '30px 30px 30px 30px 30px 30px 30px 30px' }} className=\"filter-type-buttons\">\n            {Array(15).fill(null).map((__, index) => \n                <div className=\"filter-button-div\" key={index+2006}>\n                    <SpaceXButton \n                        isSelected={props.filterObj.launch_year === (index+2006).toString()}\n                        onClick={() => props.filterClicked('launch_year', (index+2006).toString() )}\n                    >\n                        {index+2006}\n                    </SpaceXButton>\n                </div>\n            )}\n        </div>\n        <div className=\"filter-type-text\">Successful Launch</div>\n        <div style={{ gridTemplateRows: '30px' }} className=\"filter-type-buttons\">\n            {[{ text: 'True', checkText: 'true', filterType: 'launch_success' }, { text: 'False', checkText: 'false', filterType: 'launch_success' }].map((value, index) => \n                <div className=\"filter-button-div\" key={index}>\n                    <SpaceXButton \n                        isSelected={props.filterObj.launch_success === value.checkText}\n                        onClick={() => props.filterClicked(value.filterType, value.checkText)}\n                    >\n                        {value.text}\n                    </SpaceXButton>\n                </div>\n            )}\n        </div>\n        <div className=\"filter-type-text\">Successful Landing</div>\n        <div style={{ gridTemplateRows: '30px' }} className=\"filter-type-buttons\">\n            {[{ text: 'True', checkText: 'true', filterType: 'land_success' }, { text: 'False', checkText: 'false', filterType: 'land_success' }].map((value, index) => \n                <div className=\"filter-button-div\" key={index}>\n                    <SpaceXButton \n                        isSelected={props.filterObj.land_success === value.checkText}\n                        onClick={() => props.filterClicked(value.filterType, value.checkText)}\n                    >\n                        {value.text}\n                    </SpaceXButton>\n                </div>\n            )}\n        </div>\n    </div>\n)\n\nexport default Filter;","import React from 'react';\nimport './style.css';\n\nconst Loader = () => (\n    <i class=\"fas fa-spin fa-cog spacex-loader\"></i>\n);\n\nexport default Loader;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport * as LaunchListActions from '../../store/LaunchList/actions';\nimport LaunchList from '../../component/LaunchList/index';\nimport Filter from '../../component/Filter/index';\nimport Loader from '../../component/Loader/index'\nimport './style.css';\n\nclass LaunchListPage extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      launchList: [],\n      filterObj:{\n        launch_year: '',\n        launch_success: '',\n        land_success: '',\n      },\n    };\n  }\n\n  filterClicked = (filterType, value) => {\n    this.setState(prevState => ({ \n      filterObj: {\n        ...prevState.filterObj,\n        [filterType]: prevState.filterObj[filterType] === value? '': value,\n      },\n    }), () => {\n      this.props.launchListActions.getLaunchList(this.state.filterObj);\n    });\n  }\n\n  render () {\n    return (\n      <div className='launch-list-container'>\n        <div className='launch-list-body'>\n          <div className='launch-list-title'>SpaceX Launch Programs</div>\n          <div className='launch-list-content'>\n            <div className='launch-list-filter'>\n              <Filter \n                filterObj={this.state.filterObj}\n                filterClicked={this.filterClicked}\n              />\n            </div>\n            <div className='launch-list-cards'>\n                {this.props.launchList.launchListLoading?\n                  <Loader />\n                  : <LaunchList \n                    launches={this.state.launchList}\n                  />}\n            </div>\n          </div>\n          <div className='launch-list-footer'>Developer By: <span style={{ color: 'blue', fontWeight: '400' }}>Utkarsh Sanjivan</span></div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.props.launchListActions.getLaunchList({});\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.launchList.launchListLoading &&\n      !this.props.launchList.launchListLoading\n    ) {\n      this.setState({ launchList: this.props.launchList.launchList });\n    }\n  }\n\n}\n\nconst mapStateToProps = ( store ) => ({\n  launchList: store.launchList,\n});\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n      launchListActions: bindActionCreators(LaunchListActions, dispatch),\n    }\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(LaunchListPage);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ConnectedRouter } from 'react-router-redux';\nimport { Provider } from 'react-redux';\nimport createHistory from 'history/createBrowserHistory';\nimport { buildStore } from \"./store\";\nimport LaunchList from './container/LaunchListPage/index';\nimport './index.css';\n\nconst history = createHistory();\nconst store = buildStore(history, {});\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <LaunchList />\n        </ConnectedRouter>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","import { createStore, compose, applyMiddleware } from \"redux\";\nimport { routerMiddleware } from 'react-router-redux';\nimport createSagaMiddleware from \"redux-saga\";\nimport sagas from './sagas';\nimport createRootReducers from './reducers';\n\nexport const buildStore = ( history, initialState = {} ) => {\n\tconst sagaMiddleware = createSagaMiddleware(initialState = {});\n \tconst routeMiddleware = routerMiddleware(history);\n \t\n \tconst store = createStore(\n   \t\tcreateRootReducers(history),\n   \t\tinitialState,\n   \t\tcompose( \n    \t\tapplyMiddleware(sagaMiddleware, routeMiddleware)\n   \t\t)\n \t);\n\n \tsagaMiddleware.run(sagas);\n \treturn store;\n}"],"sourceRoot":""}